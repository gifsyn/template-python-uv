[project]
name = "template-python-uv"
version = "0.0.0"
description = "Template Python project with uv"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "alembic>=1.15.2",
    "asyncpg>=0.30.0",
    "dependency-injector>=4.46.0",
    "fastapi-utils[all]>=0.8.0",
    "fastapi[standard]>=0.115.12",
    "pydantic>=2.11.1",
    "pydantic-settings>=2.8.1",
    "sqlalchemy>=2.0.40",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-randomly>=3.16.0",
    "ruff>=0.11.2",
]

[tool.mypy]
strict = true
plugins = ["pydantic.mypy"]

[tool.ruff]
target-version = "py311"
line-length = 128

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D1",    # pydocstyle D100-D107
    "TD001", # invalid-todo-tag
    "TD002", # missing-todo-author
    "TD003", # missing-todo-link
    "FIX",   # flake8-fixme FIX001-FIX004
    "ERA001", # commented-out-code
    # ignore conflicting lint rules
    # ref: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",   # tab-indentation
    "E111",   # indentation-with-invalid-multiple
    "E114",   # indentation-with-invalid-multiple-comment
    "E117",   # over-indented
    "D206",   # indent-with-spaces
    "D300",   # triple-single-quotes
    "Q000",   # bad-quotes-inline-string
    "Q001",   # bad-quotes-multiline-string
    "Q002",   # bad-quotes-docstring
    "Q003",   # avoidable-escaped-quote
    "COM812", # missing-trailing-comma
    "COM819", # prohibited-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "ISC002", # multi-line-implicit-string-concatenation
]
fixable = ["ALL"]
unfixable = [
    "F401", # unused-import
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = [
    "S101", # assert
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
source = ["tests"]
omit = [
    "*/__init__.py",
    "tests/*",
]
